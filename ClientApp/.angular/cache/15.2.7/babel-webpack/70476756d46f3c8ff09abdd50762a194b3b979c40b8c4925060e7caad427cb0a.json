{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class HomeComponent {\n  constructor(http, baseUrl) {\n    this.users = [];\n    this.userForm = new FormGroup({\n      name: new FormControl(''),\n      surname: new FormControl('')\n    });\n    this.replaySubject$ = new ReplaySubject(1);\n    this.http = http;\n    this.baseUrl = baseUrl;\n    http.get(baseUrl + 'users').subscribe(result => {\n      this.users = result;\n    }, error => console.error(error));\n  }\n  onSubmit(form) {\n    console.log('Valid?', form.valid); // true or false\n    console.log('Name', form.value.name);\n    console.log('Surname', form.value.surname);\n    if (form.valid) {\n      const {\n        name,\n        surname\n      } = form.value;\n      this.http.post(this.baseUrl + 'users', form.value).subscribe(result => {\n        this.replaySubject$.next(true);\n      }, error => console.error(error));\n    }\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"name\", \"placeholder\", \"Name\"], [\"formControlName\", \"surname\", \"placeholder\", \"Surname\"], [\"type\", \"submit\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Users\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit(ctx.userForm);\n      });\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4, \"Add user\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 1)(6, \"br\")(7, \"input\", 2)(8, \"br\");\n      i0.ɵɵelementStart(9, \"button\", 3);\n      i0.ɵɵtext(10, \"Add\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AACvD,SAASC,aAAa,QAAQ,MAAM;;;;AAQpC,OAAM,MAAOC,aAAa;EAUxBC,YAAYC,IAAgB,EAAsBC,OAAe;IAT1D,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAc,IAAIL,SAAS,CAAC;MACzCM,IAAI,EAAE,IAAIP,WAAW,CAAC,EAAE,CAAC;MACzBQ,OAAO,EAAE,IAAIR,WAAW,CAAC,EAAE;KAC5B,CAAC;IAGM,mBAAc,GAAG,IAAIE,aAAa,CAAU,CAAC,CAAC;IAGpD,IAAI,CAACG,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtBD,IAAI,CAACI,GAAG,CAASH,OAAO,GAAG,OAAO,CAAC,CAACI,SAAS,CAACC,MAAM,IAAG;MACrD,IAAI,CAACC,KAAK,GAAGD,MAAM;IACrB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEAE,QAAQ,CAACC,IAAe;IACtBF,OAAO,CAACG,GAAG,CAAC,QAAQ,EAAED,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;IACnCJ,OAAO,CAACG,GAAG,CAAC,MAAM,EAAED,IAAI,CAACG,KAAK,CAACZ,IAAI,CAAC;IACpCO,OAAO,CAACG,GAAG,CAAC,SAAS,EAAED,IAAI,CAACG,KAAK,CAACX,OAAO,CAAC;IAC1C,IAAIQ,IAAI,CAACE,KAAK,EAAE;MACd,MAAM;QAAEX,IAAI;QAAEC;MAAO,CAAE,GAAGQ,IAAI,CAACG,KAAK;MACpC,IAAI,CAACd,IAAI,CAACe,IAAI,CAAS,IAAI,CAACd,OAAO,GAAG,OAAO,EAAEU,IAAI,CAACG,KAAK,CAAC,CAACT,SAAS,CAAEC,MAAW,IAAI;QACnF,IAAI,CAACU,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;MAChC,CAAC,EAAGT,KAAU,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;;EAE5C;;AA5BWV,aAAa;mBAAbA,aAAa,4DAUc,UAAU;AAAA;AAVrCA,aAAa;QAAbA,aAAa;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX1BC,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MAEdA,+BAA6D;MAAhCA;QAAA,OAAYC,0BAAkB;MAAA,EAAC;MACxDD,yBAAG;MAAAA,wBAAQ;MAAAA,iBAAI;MACfA,2BAAmD;MAInDA,iCAAsB;MAAAA,oBAAG;MAAAA,iBAAS;;;MANhCA,eAAsB;MAAtBA,wCAAsB","names":["FormControl","FormGroup","ReplaySubject","HomeComponent","constructor","http","baseUrl","name","surname","get","subscribe","result","users","error","console","onSubmit","form","log","valid","value","post","replaySubject$","next","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/amihajlovski/Projects/bank-accounts-api/ClientApp/src/app/home/home.component.ts","/Users/amihajlovski/Projects/bank-accounts-api/ClientApp/src/app/home/home.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ReplaySubject } from 'rxjs';\n\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n  public users: User[] = [];\n  public userForm: FormGroup = new FormGroup({\n    name: new FormControl(''),\n    surname: new FormControl(''),\n  });\n  public baseUrl: string;\n  public http: HttpClient;\n  private replaySubject$ = new ReplaySubject<boolean>(1);\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    http.get<User[]>(baseUrl + 'users').subscribe(result => {\n      this.users = result;\n    }, error => console.error(error));\n  }\n\n  onSubmit(form: FormGroup) {\n    console.log('Valid?', form.valid); // true or false\n    console.log('Name', form.value.name);\n    console.log('Surname', form.value.surname);\n    if (form.valid) {\n      const { name, surname } = form.value;\n      this.http.post<User[]>(this.baseUrl + 'users', form.value).subscribe((result: any) => {\n        this.replaySubject$.next(true);\n      }, (error: any) => console.error(error));\n    }\n  }\n\n  \n}\n\n","<h1>Users</h1>\n\n<form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit(userForm)\">\n    <p>Add user</p>\n    <input formControlName=\"name\" placeholder=\"Name\" />\n    <br />\n    <input formControlName=\"surname\" placeholder=\"Surname\" />\n    <br />\n    <button type=\"submit\">Add</button>\n</form>\n\n<!--<p>List of current users in the bank</p>\n<table>\n    <thead>\n        <tr>\n            <td>Id</td>\n            <td>Name</td>\n            <td>Surname</td>\n            <td>Balance</td>\n        </tr>\n    </thead>\n</table>-->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}