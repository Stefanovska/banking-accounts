{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UserDetailsComponent_ng_container_0_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"Current balance: \", ctx_r2.user.balance.value, \" \", ctx_r2.user.balance.currency, \"\");\n  }\n}\nfunction UserDetailsComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, UserDetailsComponent_ng_container_0_p_3_Template, 2, 2, \"p\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r0.user.name, \" \", ctx_r0.user.surname, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.user.balance);\n  }\n}\nfunction UserDetailsComponent_ng_container_7_ng_container_13_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\\u21B3 Transaction: \", transaction_r6 == null ? null : transaction_r6.amount == null ? null : transaction_r6.amount.value, \" \", transaction_r6 == null ? null : transaction_r6.amount == null ? null : transaction_r6.amount.currency, \"\");\n  }\n}\nfunction UserDetailsComponent_ng_container_7_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, UserDetailsComponent_ng_container_7_ng_container_13_tr_8_Template, 3, 2, \"tr\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const userAccount_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(userAccount_r4.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", userAccount_r4.initialCredit.value, \" \", userAccount_r4.initialCredit.currency, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(userAccount_r4.isCurrent ? \"Yes\" : \"No\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", userAccount_r4.transactions);\n  }\n}\nfunction UserDetailsComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \"Accounts\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"table\")(4, \"thead\")(5, \"tr\")(6, \"td\");\n    i0.ɵɵtext(7, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9, \"Initial credit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \"Is current\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"tbody\");\n    i0.ɵɵtemplate(13, UserDetailsComponent_ng_container_7_ng_container_13_Template, 9, 5, \"ng-container\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.user == null ? null : ctx_r1.user.userAccounts);\n  }\n}\nexport class UserDetailsComponent {\n  constructor(http, baseUrl, route) {\n    this.route = route;\n    this.accountForm = new FormGroup({\n      initialCredit: new FormControl()\n    });\n    this.user = null;\n    this.userId = '';\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  ngOnInit() {\n    this.userId = this.route.snapshot.params['userId'];\n    this.http.get(this.baseUrl + `users/${this.userId}`).subscribe(result => {\n      this.user = result.user;\n    });\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      const {\n        initialCredit\n      } = form.value;\n      this.http.post(this.baseUrl + `users/${this.userId}/accounts`, {\n        initialCredit: {\n          value: initialCredit,\n          currency: 'EUR'\n        }\n      }).subscribe(result => {\n        this.user = result.user;\n        this.accountForm.reset();\n      }, error => console.error(error));\n    }\n  }\n}\nUserDetailsComponent.ɵfac = function UserDetailsComponent_Factory(t) {\n  return new (t || UserDetailsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nUserDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserDetailsComponent,\n  selectors: [[\"app-user-details-component\"]],\n  decls: 8,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"number\", \"formControlName\", \"initialCredit\", \"placeholder\", \"Initial credit amount\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"], [2, \"padding-left\", \"30px\"]],\n  template: function UserDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, UserDetailsComponent_ng_container_0_Template, 4, 3, \"ng-container\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UserDetailsComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit(ctx.accountForm);\n      });\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Create account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵtext(6, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(7, UserDetailsComponent_ng_container_7_Template, 14, 1, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.accountForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.user == null ? null : ctx.user.userAccounts == null ? null : ctx.user.userAccounts.length);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"table[_ngcontent-%COMP%], td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n        border: 1px solid #ddd;\\n        text-align: left;\\n    }\\n\\n    table[_ngcontent-%COMP%] {\\n        border-collapse: collapse;\\n        width: 100%;\\n        margin: 20px 0;\\n    }\\n\\n    th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n        padding: 15px;\\n    }\\n\\n    h2[_ngcontent-%COMP%] {\\n        margin: 10px 0; \\n    }\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","i0","UserDetailsComponent","constructor","http","baseUrl","route","initialCredit","ngOnInit","userId","snapshot","params","get","subscribe","result","user","onSubmit","form","valid","value","post","currency","accountForm","reset","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/amihajlovski/Projects/bank-accounts-api/ClientApp/src/app/user-details/user-details.component.ts","/Users/amihajlovski/Projects/bank-accounts-api/ClientApp/src/app/user-details/user-details.component.html"],"sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { User } from '../models/user';\nimport { UserAccount } from '../models/userAccount';\n\n@Component({\n  selector: 'app-user-details-component',\n  templateUrl: './user-details.component.html'\n})\nexport class UserDetailsComponent implements OnInit {\n  public accountForm: FormGroup = new FormGroup({\n    initialCredit: new FormControl(),\n  });\n  public user: User | null = null;\n  public userId: string = '';\n  public baseUrl: string;\n  public http: HttpClient;\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string, private route: ActivatedRoute) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n\n  ngOnInit() {\n    this.userId = this.route.snapshot.params['userId'];\n    this.http.get<User[]>(this.baseUrl + `users/${this.userId}`).subscribe((result: any) => {\n      this.user = result.user;\n    })\n  }\n\n  onSubmit(form: FormGroup) {\n    if (form.valid) {\n      const { initialCredit } = form.value;\n      this.http.post<UserAccount>(this.baseUrl + `users/${this.userId}/accounts`, {\n        initialCredit: {\n          value: initialCredit,\n          currency: 'EUR'\n        }\n      }).subscribe((result: any) => {\n        this.user = result.user;\n        this.accountForm.reset();\n      }, (error: any) => console.error(error));\n    }\n  }\n}\n\n","<style>\n    table, td, th {\n        border: 1px solid #ddd;\n        text-align: left;\n    }\n\n    table {\n        border-collapse: collapse;\n        width: 100%;\n        margin: 20px 0;\n    }\n\n    th, td {\n        padding: 15px;\n    }\n\n    h2 {\n        margin: 10px 0; \n    }\n</style>\n\n<ng-container *ngIf=\"user\">\n    <h3>{{user.name}} {{user.surname}}</h3>\n    <p *ngIf=\"user.balance\">Current balance: {{user.balance.value}} {{user.balance.currency}}</p>\n</ng-container>\n\n<form [formGroup]=\"accountForm\" (ngSubmit)=\"onSubmit(accountForm)\">\n    <h2>Create account</h2>\n    <input type=\"number\" formControlName=\"initialCredit\" placeholder=\"Initial credit amount\" />\n    <button type=\"submit\">Submit</button>\n</form>\n\n<ng-container *ngIf=\"user?.userAccounts?.length\">\n    <h2>Accounts</h2>\n    <table>\n        <thead>\n            <tr>\n                <td>ID</td>\n                <td>Initial credit</td>\n                <td>Is current</td>\n            </tr>\n        </thead>\n        <tbody>\n            <ng-container *ngFor=\"let userAccount of user?.userAccounts\">\n                <tr>\n                    <td>{{userAccount.id}}</td>\n                    <td>{{userAccount.initialCredit.value}} {{userAccount.initialCredit.currency}}</td>\n                    <td>{{userAccount.isCurrent ? 'Yes' : 'No'}}</td>\n                </tr>\n                <tr *ngFor=\"let transaction of userAccount.transactions\">\n                    <td style=\"padding-left: 30px\">↳ Transaction: {{transaction?.amount?.value}} {{transaction?.amount?.currency}}</td>\n                </tr>\n            </ng-container>\n        </tbody>\n    </table>\n</ng-container>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}